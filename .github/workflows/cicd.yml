name: CI - CD action for NuxtJS

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
jobs:
  nuxtjs-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: |
          npm install
          npm run build

  # Auto deploy to Staging server
  deploy-staging:
    name: Deploy to Staging server
    runs-on: ubuntu-latest
    needs: [nuxtjs-ci]
    if: github.ref == 'refs/heads/dev'
    env:
      SOURCE_PATH: "/var/www/app/fe"
      GIT_BRANCH: "dev"
      SSH_KEY: ${{ secrets.STG_PRIVATE_KEY }}
      SSH_HOST: ${{ secrets.STG_HOST }}

    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User ubuntu
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
      # SSH to server and run deploy.sh script
      - name: SSH to server and run deploy.sh script
        run: ssh staging "cd" $SOURCE_PATH "&& sh deploy.sh $GIT_BRANCH"
